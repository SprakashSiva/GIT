Git Basic commands
  git init
  git status
  git add .
  git commit -m "First Commit 2021-09-22"
  after upload UI changes the file on 
  git status
  git diff {file_path}
  git reset mode
  git checkout -b base
  
  pull files from git 
  git pull origin 
  
  
I can't clone the git repository in my local system
Error: 
  Cloning into 'spiritual360'...
fatal: unable to access 'http://git.websitestore.in/magento-projects/spiritual360.git/': server certificate verification failed. CAfile: /etc/ssl/certs/ca-certificates.crt CRLfile: none

solution:
  ram run below command(the issue is fixed)
    git config --global http.sslverify false

I can't run the composer install command for the spiritual60 install
Error:
  The requested package welt pixel/module-google-tag-manager could not be found in any version, there may be a typo in the package name.

Solution:
  Remove line 23 "weltpixel/module-google-tag-manager": "^1.10" from composer.json file on magento root directory(example spiritual360)

1. Add files. means add all files from the current directory
git add . 

2. Commit the files and enter the reason
git commit -m "Return/Refunds, commission percentage, create shipment" 

3. Before committing please set your account default
git config --global user.email "prakash.s@synamen.com"
git config --global user.name "prakash.s"

4. check the git status
git status

5. Push the files locally into a git repository
git push origin base

6. check the current repository
git rev-parse --abbrev-ref HEAD

git merge request in below via also use ( Don't Forget)
git source project -> branches -> for example base branch click merge request then create a new merge request



If you delete the last modify the file in git then use the below command and replace my-file.txt with your file name
git checkout HEAD -- my-file.txt

cloned git repository but not got the app folder so using the below command
git checkout base  // means you get files from base

if change the git user name & email
1.git config user.name "prakash.s"  // set git user name
2.git config user.email "prakash.s@synamen.com" // set git email
3.git config --list  //if check all username and password 

before any push please check the below thinks
1.git status  // files modified or not 
2.git add .  // .means current directory all files to git
3.git commit -m "message"  // to commit  local files
4.git status // 
5.git log    // chceck user name,email
6.git push origin base //base one of repositry


Fix the git conflict issue on the local Example

Create a new project directory and clone the project like a master
->git clone --branch master 
Add changes to the files like.gitignore then add and commit 
->git add .
Commit the last change
->git commit -m “Message”
Check the status
->git status
Checkout the demo branch from remote like the below command
->git checkout demo (then demo branch with the latest commit on the local)
Switch git branch 
->git checkout demo
Check current branch
->git branch
Check commit history
->git log
Check the master and demo branches, if the last commit is not pushed then push it to the remote branches
->git push origin master
Merge the demo branch to the master branch (The current branch is the master)
->git merge demo
If showing a conflict error then fix the conflicts files then add the files, commit, and push to the remote

git ignore file permission
git config core.fileMode false


To upload your project, first time in your git repository :
 
Go to your project folder and type the below command in the terminal, this command just initializes your git access to the project folder.
- git init

Now to access your repository, you have to copy your repository http url, then type the below command in terminal.
- git remote add origin [ ‘ here paste the http url of the repository’ ]

Now you are ready to upload your project to the repository, the below command will start to add the project.
- git add .

For every upload you have to give a message to the project, type the below command in terminal
- git commit -m “tell the message”

The below command will upload your project to the branch in your repository
- git push -u origin master


To clone your project, from the existing git repository :

Before cloning your project, Confirm the last commit from the graph in your repository, Then use the below command to clone the project.
- git clone “ paste the http code of the project” --branch “branch name”

     
To check the difference after working with the cloned project :

To know the files you have changed, use the below command in the terminal. Make sure before using this command you have to be in your project folder.
- git status	

Next use the below command to see the difference in each line of the files
- git diff

To commit your project, to the existing git repository :

Before commit the changes use the below command to add the project. Note: “add .” the last dot is important, don't miss it.
- git add .

To give a message for your commit use the below command in your terminal.
- git commit -m ‘type your changes in single line’

Select the branch before your commit.
- git branch

Now type the below command in your terminal to upload the changes.
- git push origin (branch name)

